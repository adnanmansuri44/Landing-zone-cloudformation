---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Security: CloudTrail across all regions, a cloudonaut.io template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'CloudTrail Parameters'
      Parameters:
      - CloudtrailName
      - CloudWatchLogsRetentionInDays
      - ExternalTrailBucket
      - CloudwatchLogGroupName
      - LogFilePrefix
      
Parameters:
  CloudtrailName:
    Description: 'Name of Cloudtrail'
    Type: String
    Default: ''
  CloudWatchLogsRetentionInDays:
    Description: 'The number of days log events are kept in CloudWatch Logs'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  ExternalTrailBucket:
    Description: 'Optional The name of the Amazon S3 bucket where CloudTrail publishes log files. If you leave this empty, the Amazon S3 bucket is created for you.'
    Type: String
    Default: ''
  CloudwatchLogGroupName:
    Description: 'Optional Name of Cloudwatch Log Group'
    Type: String
    Default: ''
  LogFilePrefix:
    Description: 'Optional The log file prefix.'
    Type: String
    Default: ''
Conditions:
  InternalBucket: !Equals [!Ref ExternalTrailBucket, '']
  ExternalBucket: !Not [!Equals [!Ref ExternalTrailBucket, '']]
Resources:
  myKMSKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: This will used by cloudtrail to store logs in s3 with encryption
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: Key policy created by CloudTrail
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join 
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
                Service: cloudtrail.amazonaws.com
            Action: kms:GenerateDataKey*
            Resource: "*"
            Condition:
                StringLike:
                    kms:EncryptionContext:aws:cloudtrail:arn: !Sub arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*
          - Sid: Allow CloudTrail to describe key
            Effect: Allow
            Principal:
                Service: cloudtrail.amazonaws.com
            Action: kms:DescribeKey
            Resource: "*"
          - Sid: Allow principals in the account to decrypt log files
            Effect: Allow
            Principal:
                AWS: "*"
            Action:
            - kms:Decrypt
            - kms:ReEncryptFrom
            Resource: "*"
            Condition:
                StringEquals:
                    kms:CallerAccount: '!Ref AWS::AccountId'
                StringLike:
                    kms:EncryptionContext:aws:cloudtrail:arn: !Sub arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*
          - Sid: Allow alias creation during setup
            Effect: Allow
            Principal:
              AWS: "*"
            Action: kms:CreateAlias
            Resource: "*"
            Condition:
                StringEquals:
                    kms:CallerAccount: '!Ref AWS::AccountId'
                StringEquals:
                    kms:ViaService: !Sub ec2.${AWS::Region}.amazonaws.com
          - Sid: Enable cross account log decryption
            Effect: Allow
            Principal:
                AWS: "*"
            Action:
            - kms:Decrypt
            - kms:ReEncryptFrom
            Resource: "*"
            Condition:
                StringEquals:
                    kms:CallerAccount: '!Ref AWS::AccountId'
                StringLike:
                    kms:EncryptionContext:aws:cloudtrail:arn: !Sub arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*
      Tags:
        - Key: Name
          Value: CMK for logs
  myKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
        AliasName: alias/Logencryption
        TargetKeyId:
            Ref: myKMSKey
  TrailBucket:
    Condition: InternalBucket
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties: {}
  TrailBucketPolicy:
    Condition: InternalBucket
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref TrailBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:GetBucketAcl'
          Resource: !Sub 'arn:aws:s3:::${TrailBucket}'
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:PutObject'
          Resource: !Sub 'arn:aws:s3:::${TrailBucket}/AWSLogs/${AWS::AccountId}/*'
          Condition:
            StringEquals:
              's3:x-amz-acl': 'bucket-owner-full-control'
  TrailLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: String
      RetentionInDays: !Ref CloudWatchLogsRetentionInDays
  TrailLogGroupRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AssumeRole1
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: 'cloudtrail-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: !GetAtt 'TrailLogGroup.Arn'
  TrailTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
        DisplayName: trail-SNS
        TopicName: Notify-cloudtrail-event-notification
  TrailTopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailSNSPolicy
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Resource: !Ref TrailTopic
          Action: 'sns:Publish'
      Topics:
      - !Ref TrailTopic
  Trail:
    Condition: InternalBucket
    DependsOn:
    - TrailTopicPolicy
    - TrailBucketPolicy
    - myKMSKey
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      TrailName: !Ref CloudtrailName
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      EventSelectors:
        - 
            ReadWriteType: All
            IncludeManagementEvents: true
            DataResources: 
            - 
                Type: 'AWS::S3::Object'
                Values: 
                    -   'arn:aws:s3:::'
            -
                Type: 'AWS::Lambda::Function'
                Values:
                    -   'arn:aws:lambda'
      KMSKeyId: !Ref myKMSKey
      S3BucketName: !Ref TrailBucket
      S3KeyPrefix: !Ref LogFilePrefix
      CloudWatchLogsLogGroupArn: !GetAtt 'TrailLogGroup.Arn'
      CloudWatchLogsRoleArn: !GetAtt 'TrailLogGroupRole.Arn'
      SnsTopicName: !GetAtt 'TrailTopic.TopicName'
  ExternalTrail:
    Condition: ExternalBucket
    DependsOn:
    - TrailTopicPolicy
    - myKMSKey
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      TrailName: !Ref CloudtrailName
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      EventSelectors:
        - 
            ReadWriteType: All
            IncludeManagementEvents: true
            DataResources: 
            - 
                Type: 'AWS::S3::Object'
                Values: 
                    -   'arn:aws:s3:::'
            -
                Type: 'AWS::Lambda::Function'
                Values:
                    -   'arn:aws:lambda'
      KMSKeyId: !Ref myKMSKey
      S3BucketName: !Ref ExternalTrailBucket
      S3KeyPrefix: !Ref LogFilePrefix
      CloudWatchLogsLogGroupArn: !GetAtt 'TrailLogGroup.Arn'
      CloudWatchLogsRoleArn: !GetAtt 'TrailLogGroupRole.Arn'
      SnsTopicName: !GetAtt 'TrailTopic.TopicName'
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  SNSTopicname:
    Description: 'Name of SNS created for Cloudtrail events'
    Value: !GetAtt 'TrailTopic.TopicName'